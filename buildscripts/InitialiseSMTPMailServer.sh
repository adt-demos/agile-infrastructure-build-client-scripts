#!/bin/sh
#########################################################################################
# Author : Peter Winter
# Date   : 13/07/2016
# Description : This script sets up the configuration needed for the mail server. This should
# only be run by the domain master.
#########################################################################################
# License Agreement:
# This file is part of The Agile Deployment Toolkit.
# The Agile Deployment Toolkit is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# The Agile Deployment Toolkit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with The Agile Deployment Toolkit.  If not, see <http://www.gnu.org/licenses/>.
#########################################################################################
#########################################################################################
#set -x

if ( [ "${PREVIOUS_BUILD_CONFIG}" = "0" ] )
then
    status "##################################################################################################################################"
    status "We need to have a smtp service for emails generated by the deployed application as well as system emails from the infrastructure to you, the webmaster"
    status "It is therefore necessary to provide an email address which can be used both to send emails from the application and also to send system messages to"
    status "##################################################################################################################################"
    status "So, please enter the email address where you wish system messages to be sent"
    read SYSTEM_TOEMAIL_ADDRESS

    while ( [ "${SYSTEM_TOEMAIL_ADDRESS}" = "" ] || [ "`/bin/echo ${SYSTEM_TOEMAIL_ADDRESS} | /bin/grep -E "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$"`" = "" ] )
    do
        status "That seems to be an invalid email address, please try again"
        read SYSTEM_TOEMAIL_ADDRESS
    done

    status "##################################################################################################################################"
    status "We also need to set up an SMTP provider to send the system status emails through"
    status "If you don't have an account with one of the supported smtp server providers, please set one up first"
    status "Which SMTP provider are you registered with?"
    status "There's a little trick of aesthetics here. Gmail is free, but mails will be sent with an email address like fred@gmail.com"
    status "SMTP pulse, for example is not free, but you can register your postmaster@yourdomain.com from your postfix deployment and mails will be personalised to your domain then"
    status "##################################################################################################################################"
    status "Currently, we support 1) SMTP Pulse (www.sendpulse.com) 2) Google (gmail) 3) Amazon (SES)"
    read SYSTEM_EMAIL_PROVIDER

    while ( [ "${SYSTEM_EMAIL_PROVIDER}" = "" ] || [ "`/bin/echo '1 2 3' | /bin/grep ${SYSTEM_EMAIL_PROVIDER}`" = "" ] )
    do
        status "Invalid choice, please try again"
        read SYSTEM_EMAIL_PROVIDER
    done

    status "Please enter 1) The Address you would like system emails to be sent from"
    read SYSTEM_FROMEMAIL_ADDRESS

    while ( [ "${SYSTEM_FROMEMAIL_ADDRESS}" = "" ] || [ "`/bin/echo ${SYSTEM_FROMEMAIL_ADDRESS} | /bin/grep -E "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$"`" = "" ] )
    do
        status "That seems to be an invalid email address, please try again"
        read SYSTEM_FROMEMAIL_ADDRESS
    done

    status "Please enter your email address or username for your SMTP provider"
    read SYSTEM_EMAIL_USERNAME

    if ( [ "${SYSTEM_EMAIL_PROVIDER}" != "3" ] )
    then
        while ( [ "${SYSTEM_EMAIL_USERNAME}" = "" ] || [ "`/bin/echo ${SYSTEM_EMAIL_USERNAME} | /bin/grep -E "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$"`" = "" ] )
        do
            status "That seems to be an invalid email address, please try again"
            read SYSTEM_EMAIL_USERNAME
        done
    fi

    status "Please enter your password for your SMTP provider"
    /bin/stty -echo >&3
    read SYSTEM_EMAIL_PASSWORD
    /bin/stty echo >&3

    /bin/rm ${BUILD_HOME}/buildconfiguration/${CLOUDHOST}/${BUILD_IDENTIFIER}-credentials/SYSTEMEMAILPASSWORD.dat

    #There is a special case where some generated and unchangeable passwords for email providers (AWS SES) can on occassion
    #have a '/' character in them which makes them impossible to persist on the file system as we usually do on our servers
    #so, I wrap it in a file and extract it from the file on the server as required.
    if ( [ "`/bin/echo ${SYSTEM_EMAIL_PASSWORD} | /bin/grep '/'`" != "" ] )
    then
        /bin/echo ${SYSTEM_EMAIL_PASSWORD} > ${BUILD_HOME}/buildconfiguration/${CLOUDHOST}/${BUILD_IDENTIFIER}-credentials/SYSTEMEMAILPASSWORD.dat
    fi
fi

